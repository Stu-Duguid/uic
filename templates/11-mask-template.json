{
  "events" : [ {
    "displayName" : "Mask - Address",
    "internalName" : "E_MASK_ADDRESS",
    "capturePersonalData" : false,
    "active" : true,
    "tags" : [ "mask" ],
    "trigger" : "EveryHit",
    "publish" : "Immediate",
    "mode" : "Basic",
    "javascript" : "// NOTE: Do not change event name\nfunction E_MASK_ADDRESS()\n{\n    if ($P[\"P_MASK_ADDRESS\"].patternFound() || $P[\"P_MASK_ADDRESS_IN_SPAN\"].patternFound())\n    {\n        $F.setFacts(\"E_MASK_ADDRESS\");\n    }\n}",
    "conditionGroup" : {
      "conditionOperator" : "Or",
      "conditions" : [ {
        "leftOperand" : {
          "displayName" : "Mask - Address in <p>",
          "internalName" : "P_MASK_ADDRESS",
          "type" : "HitAttribute"
        },
        "leftOperandValueType" : "Pattern",
        "method" : "patternFound()",
        "conditionOperator" : "IsTrue",
        "rightOperandValue" : "",
        "rightOperandValueType" : "TextLiteral",
        "caseSensitive" : false
      }, {
        "leftOperand" : {
          "displayName" : "Mask - Address in <span>",
          "internalName" : "P_MASK_ADDRESS_IN_SPAN",
          "type" : "HitAttribute"
        },
        "leftOperandValueType" : "Pattern",
        "method" : "patternFound()",
        "conditionOperator" : "IsTrue",
        "rightOperandValue" : "",
        "rightOperandValueType" : "TextLiteral",
        "caseSensitive" : false
      } ],
      "lowerBound" : 0.0,
      "upperBound" : 0.0
    },
    "referenceValueType" : "Custom",
    "valueType" : "Text",
    "storeMetrics" : "Count",
    "track" : "AllOccurrence",
    "forSupportUserOnly" : false,
    "buildingBlockOnly" : false,
    "discardSession" : false,
    "geoAnalyticsEnabled" : false,
    "dimensionGroups" : {
      "Web Page Load context" : false
    }
  }, {
    "displayName" : "Mask - Email",
    "internalName" : "E_MASK_EMAIL",
    "capturePersonalData" : false,
    "active" : true,
    "tags" : [ "mask" ],
    "trigger" : "EveryHit",
    "publish" : "Immediate",
    "mode" : "Basic",
    "javascript" : "// NOTE: Do not change event name\nfunction E_MASK_EMAIL()\n{\n    if ($P[\"P_MASK_EMAIL_IN_P\"].patternFound() || $P[\"P_MASK_EMAIL_IN_SPAN\"].patternFound())\n    {\n        $F.setFacts(\"E_MASK_EMAIL\");\n    }\n}",
    "conditionGroup" : {
      "conditionOperator" : "Or",
      "conditions" : [ {
        "leftOperand" : {
          "displayName" : "Mask - Email in <p>",
          "internalName" : "P_MASK_EMAIL_IN_P",
          "type" : "HitAttribute"
        },
        "leftOperandValueType" : "Pattern",
        "method" : "patternFound()",
        "conditionOperator" : "IsTrue",
        "rightOperandValue" : "",
        "rightOperandValueType" : "TextLiteral",
        "caseSensitive" : false
      }, {
        "leftOperand" : {
          "displayName" : "Mask - Email in <span>",
          "internalName" : "P_MASK_EMAIL_IN_SPAN",
          "type" : "HitAttribute"
        },
        "leftOperandValueType" : "Pattern",
        "method" : "patternFound()",
        "conditionOperator" : "IsTrue",
        "rightOperandValue" : "",
        "rightOperandValueType" : "TextLiteral",
        "caseSensitive" : false
      } ],
      "lowerBound" : 0.0,
      "upperBound" : 0.0
    },
    "referenceValueType" : "Custom",
    "valueType" : "Text",
    "storeMetrics" : "Count",
    "track" : "AllOccurrence",
    "forSupportUserOnly" : false,
    "buildingBlockOnly" : false,
    "discardSession" : false,
    "geoAnalyticsEnabled" : false,
    "dimensionGroups" : {
      "Web Page Load context" : false
    }
  }, {
    "displayName" : "Mask - Phone",
    "internalName" : "E_MASK_PHONE",
    "capturePersonalData" : false,
    "active" : true,
    "tags" : [ "mask" ],
    "trigger" : "EveryHit",
    "publish" : "Immediate",
    "mode" : "Basic",
    "javascript" : "// NOTE: Do not change event name\nfunction E_MASK_PHONE()\n{\n    if ($P[\"P_MASK_PHONE_IN_P\"].patternFound() || $P[\"P_MASK_PHONE_IN_SPAN\"].patternFound())\n    {\n        $F.setFacts(\"E_MASK_PHONE\");\n    }\n}",
    "conditionGroup" : {
      "conditionOperator" : "Or",
      "conditions" : [ {
        "leftOperand" : {
          "displayName" : "Mask - Phone in <p>",
          "internalName" : "P_MASK_PHONE_IN_P",
          "type" : "HitAttribute"
        },
        "leftOperandValueType" : "Pattern",
        "method" : "patternFound()",
        "conditionOperator" : "IsTrue",
        "rightOperandValue" : "",
        "rightOperandValueType" : "TextLiteral",
        "caseSensitive" : false
      }, {
        "leftOperand" : {
          "displayName" : "Mask - Phone in <span>",
          "internalName" : "P_MASK_PHONE_IN_SPAN",
          "type" : "HitAttribute"
        },
        "leftOperandValueType" : "Pattern",
        "method" : "patternFound()",
        "conditionOperator" : "IsTrue",
        "rightOperandValue" : "",
        "rightOperandValueType" : "TextLiteral",
        "caseSensitive" : false
      } ],
      "lowerBound" : 0.0,
      "upperBound" : 0.0
    },
    "referenceValueType" : "Custom",
    "valueType" : "Text",
    "storeMetrics" : "Count",
    "track" : "AllOccurrence",
    "forSupportUserOnly" : false,
    "buildingBlockOnly" : false,
    "discardSession" : false,
    "geoAnalyticsEnabled" : false,
    "dimensionGroups" : {
      "Web Page Load context" : false
    }
  }, {
    "displayName" : "Mask - Name",
    "internalName" : "E_MASK_NAME_IN_TITLE",
    "capturePersonalData" : false,
    "active" : true,
    "tags" : [ "mask" ],
    "trigger" : "EveryHit",
    "publish" : "Immediate",
    "mode" : "Basic",
    "javascript" : "// NOTE: Do not change event name\nfunction E_MASK_NAME_IN_TITLE()\n{\n    if ($P[\"P_MASK_NAME_IN_TITLE\"].patternFound())\n    {\n        $F.setFacts(\"E_MASK_NAME_IN_TITLE\");\n    }\n}",
    "conditionGroup" : {
      "conditionOperator" : "And",
      "conditions" : [ {
        "leftOperand" : {
          "displayName" : "Mask - Name in <title>",
          "internalName" : "P_MASK_NAME_IN_TITLE",
          "type" : "HitAttribute"
        },
        "leftOperandValueType" : "Pattern",
        "method" : "patternFound()",
        "conditionOperator" : "IsTrue",
        "rightOperandValue" : "",
        "rightOperandValueType" : "TextLiteral",
        "caseSensitive" : false
      } ],
      "lowerBound" : 0.0,
      "upperBound" : 0.0
    },
    "referenceValueType" : "Custom",
    "valueType" : "Text",
    "storeMetrics" : "Count",
    "track" : "AllOccurrence",
    "forSupportUserOnly" : false,
    "buildingBlockOnly" : false,
    "discardSession" : false,
    "geoAnalyticsEnabled" : false,
    "dimensionGroups" : { }
  }, {
    "displayName" : "Mask - Date",
    "internalName" : "E_MASK_DATE",
    "capturePersonalData" : false,
    "active" : true,
    "tags" : [ "mask" ],
    "trigger" : "EveryHit",
    "publish" : "Immediate",
    "mode" : "Basic",
    "javascript" : "// NOTE: Do not change event name\nfunction E_MASK_DATE()\n{\n    if ($P[\"P_MASK_DATE_IN_P\"].patternFound() || $P[\"P_MASK_DATE_IN_SPAN\"].patternFound())\n    {\n        $F.setFacts(\"E_MASK_DATE\");\n    }\n}",
    "conditionGroup" : {
      "conditionOperator" : "Or",
      "conditions" : [ {
        "leftOperand" : {
          "displayName" : "Mask - Date in <p>",
          "internalName" : "P_MASK_DATE_IN_P",
          "type" : "HitAttribute"
        },
        "leftOperandValueType" : "Pattern",
        "method" : "patternFound()",
        "conditionOperator" : "IsTrue",
        "rightOperandValue" : "",
        "rightOperandValueType" : "TextLiteral",
        "caseSensitive" : false
      }, {
        "leftOperand" : {
          "displayName" : "Mask - Date in <span>",
          "internalName" : "P_MASK_DATE_IN_SPAN",
          "type" : "HitAttribute"
        },
        "leftOperandValueType" : "Pattern",
        "method" : "patternFound()",
        "conditionOperator" : "IsTrue",
        "rightOperandValue" : "",
        "rightOperandValueType" : "TextLiteral",
        "caseSensitive" : false
      } ],
      "lowerBound" : 0.0,
      "upperBound" : 0.0
    },
    "referenceValueType" : "Custom",
    "valueType" : "Text",
    "storeMetrics" : "Count",
    "track" : "AllOccurrence",
    "forSupportUserOnly" : false,
    "buildingBlockOnly" : false,
    "discardSession" : false,
    "geoAnalyticsEnabled" : false,
    "dimensionGroups" : {
      "Web Page Load context" : false
    }
  } ],
  "dimensions" : [ ],
  "dimensionGroups" : [ ],
  "sessionAttributes" : [ ],
  "hitAttributes" : [ {
    "displayName" : "Mask - Address in <p>",
    "internalName" : "P_MASK_ADDRESS",
    "tags" : [ "mask" ],
    "active" : true,
    "match" : "Response",
    "use" : "StartEndExpression",
    "startTag" : "<p ",
    "endTag" : "</p>",
    "useRegex" : true,
    "regex" : ">([0-9a-zA-Z -]+, [A-Z][a-z-]+ [A-Z]{2,3} \\d{4})$",
    "blockReplace" : false,
    "displayCase" : "NoChange"
  }, {
    "displayName" : "Mask - Email in <p>",
    "internalName" : "P_MASK_EMAIL_IN_P",
    "tags" : [ "mask" ],
    "active" : true,
    "match" : "Response",
    "use" : "StartEndExpression",
    "startTag" : "<p ",
    "endTag" : "</p>",
    "useRegex" : true,
    "regex" : ">([0-9a-zA-Z_ -]+@[0-9a-zA-Z\\.]+)$",
    "blockReplace" : false,
    "displayCase" : "NoChange"
  }, {
    "displayName" : "Mask - Email in <span>",
    "internalName" : "P_MASK_EMAIL_IN_SPAN",
    "tags" : [ "mask" ],
    "active" : true,
    "match" : "Response",
    "use" : "StartEndExpression",
    "startTag" : "<span ",
    "endTag" : "</span>",
    "useRegex" : true,
    "regex" : ">([0-9a-zA-Z_ -]+@[0-9a-zA-Z\\.]+)$",
    "blockReplace" : false,
    "displayCase" : "NoChange"
  }, {
    "displayName" : "Mask - Address in <span>",
    "internalName" : "P_MASK_ADDRESS_IN_SPAN",
    "tags" : [ "mask" ],
    "active" : true,
    "match" : "Response",
    "use" : "StartEndExpression",
    "startTag" : "<span ",
    "endTag" : "</span>",
    "useRegex" : true,
    "regex" : ">([0-9a-zA-Z -]+, [A-Z][a-z-]+ [A-Z]{2,3} \\d{4})$",
    "blockReplace" : false,
    "displayCase" : "NoChange"
  }, {
    "displayName" : "Mask - Phone in <p>",
    "internalName" : "P_MASK_PHONE_IN_P",
    "tags" : [ "mask" ],
    "active" : true,
    "match" : "Response",
    "use" : "StartEndExpression",
    "startTag" : "<p ",
    "endTag" : "</p>",
    "useRegex" : true,
    "regex" : ">([0-9 ]{7,})$",
    "blockReplace" : false,
    "displayCase" : "NoChange"
  }, {
    "displayName" : "Mask - Phone in <span>",
    "internalName" : "P_MASK_PHONE_IN_SPAN",
    "tags" : [ "mask" ],
    "active" : true,
    "match" : "Response",
    "use" : "StartEndExpression",
    "startTag" : "<span ",
    "endTag" : "</span>",
    "useRegex" : true,
    "regex" : ">([0-9 ]{7,})$",
    "blockReplace" : false,
    "displayCase" : "NoChange"
  }, {
    "displayName" : "Mask - Name in <title>",
    "internalName" : "P_MASK_NAME_IN_TITLE",
    "tags" : [ "mask" ],
    "active" : true,
    "match" : "Request",
    "use" : "StartEndExpression",
    "startTag" : "\"title\":\"",
    "endTag" : "\"",
    "useRegex" : true,
    "regex" : "^([a-zA-Z -]+)'s details",
    "blockReplace" : true,
    "blockReplacement" : "XXX XXX",
    "displayCase" : "NoChange"
  }, {
    "displayName" : "Mask - Name in <header>",
    "internalName" : "P_MASK_NAME_IN_HEADER",
    "tags" : [ "mask" ],
    "active" : true,
    "match" : "Request",
    "use" : "StartEndExpression",
    "startTag" : ">Hi ",
    "endTag" : ", what",
    "useRegex" : false,
    "blockReplace" : true,
    "blockReplacement" : "XXX XXX",
    "displayCase" : "NoChange"
  }, {
    "displayName" : "Mask - Date in <p>",
    "internalName" : "P_MASK_DATE_IN_P",
    "tags" : [ "mask" ],
    "active" : true,
    "match" : "Request",
    "use" : "StartEndExpression",
    "startTag" : "<p ",
    "endTag" : "</p>",
    "useRegex" : true,
    "regex" : "(\\d\\d?/\\d\\d/\\d\\d(\\d\\d)?)",
    "blockReplace" : true,
    "blockReplacement" : "99/99/99",
    "displayCase" : "NoChange"
  }, {
    "displayName" : "Mask - Date in <span>",
    "internalName" : "P_MASK_DATE_IN_SPAN",
    "tags" : [ "mask" ],
    "active" : true,
    "match" : "Request",
    "use" : "StartEndExpression",
    "startTag" : "<span ",
    "endTag" : "</span>",
    "useRegex" : true,
    "regex" : "(\\d\\d?/\\d\\d/\\d\\d(\\d\\d)?)",
    "blockReplace" : true,
    "blockReplacement" : "99/99/9999",
    "displayCase" : "NoChange"
  } ],
  "stepAttributes" : [ ]
}